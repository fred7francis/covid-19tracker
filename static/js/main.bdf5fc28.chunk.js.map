{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid-19.png","images/title.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","critical","deaths","lastUpdate","className","styles","container","Grid","justify","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","options","baseURL","headers","fetchData","country","a","changeableUrl","axios","request","fetchDailyData","get","fetchCountries","map","name","Chart","useState","dailyData","setDailyData","useEffect","setTimeout","initialDailyData","barChart","labels","datasets","label","backgroundColor","legend","display","title","text","lineChart","date","Date","toLocaleDateString","borderColor","fill","borderWidth","CountryPicker","handleCountryChange","countries","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","App","state","setState","console","log","this","image","src","covidtitle","alt","toUTCString","href","credits","logoimg","covid19","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf5fc28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2Ny0b\",\"confirmed\":\"Cards_confirmed__2uFBP\",\"deaths\":\"Cards_deaths__2a877\",\"recovered\":\"Cards_recovered__1Tm-r\",\"critical\":\"Cards_critical__yzfq6\",\"card\":\"Cards_card__3LVU7\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nfunction Cards({ data: { confirmed, recovered, critical, deaths, lastUpdate } }) {\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container justify=\"center\" >\r\n                <Grid item xs={12} md={2} component={Card} className={cx(styles.card, styles.confirmed)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Confirmed\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={confirmed} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={2} component={Card} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={recovered} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={2} component={Card} className={cx(styles.card,styles.critical)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Critical\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={critical} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={2} component={Card} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={deaths} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from \"axios\";\r\n\r\nconst options = {\r\n    baseURL: 'https://covid-19-data.p.rapidapi.com',\r\n    headers: {\r\n        'x-rapidapi-key': '4f9743c401msh30ddf34a7cf894cp192b00jsn60a0cc6938b6',\r\n        'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n    }\r\n};\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = country ? `/country?name=${country}` : '/totals';\r\n    try {\r\n        const { data } = await axios.request(changeableUrl, options);\r\n        const { confirmed, recovered, critical, deaths, lastUpdate } = data[0]\r\n        return { confirmed, recovered, critical, deaths, lastUpdate }\r\n    } catch (error) {\r\n        return (error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get('/report/totals', options);\r\n        return data\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data } = await axios.get('/help/countries', options)\r\n        return data.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nfunction Chart({ data: { confirmed, critical, recovered, deaths }, country }) {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        setTimeout(fetchMyAPI, 1500);\r\n    }, []);\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Confirmed', 'Recovered', 'Critical', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(255, 193, 7, 0.5)', 'rgba(33, 136, 56, 0.5)', 'rgba(200, 35, 51, 0.5)', 'rgba(90, 98, 104, 0.5)'],\r\n                            data: [confirmed, recovered, critical, deaths],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n                    datasets: [\r\n                        {\r\n                            data: dailyData.map((data) => data.confirmed),\r\n                            label: 'Confirmed',\r\n                            borderColor: 'rgba(255, 193, 7, 1)',\r\n                            backgroundColor:'rgba(255, 193, 7, 0.5)',\r\n                            fill: true,\r\n                            borderWidth: 0.5\r\n                        },\r\n                        {\r\n                            data: dailyData.map((data) => data.deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'rgba(90, 98, 104, 1)',\r\n                            backgroundColor: 'rgba(90, 98, 104, 0.5)',\r\n                            fill: true,\r\n                            borderWidth: 1\r\n                        },\r\n                        {\r\n                            data: dailyData.map((data) => data.recovered),\r\n                            label: 'Recovered',\r\n                            borderColor: 'rgba(33, 136, 56, 1)',\r\n                            backgroundColor: 'rgba(33, 136, 56, 0.5)',\r\n                            fill: true,\r\n                            borderWidth: 1\r\n                        },\r\n                        {\r\n                            data: dailyData.map((data) => data.critical),\r\n                            label: 'Critical',\r\n                            borderColor: 'rgba(200, 35, 51, 1)',\r\n                            backgroundColor: 'rgba(200, 35, 51, 0.5)',\r\n                            fill: true,\r\n                            borderWidth: 1\r\n                        }\r\n                    ],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nfunction CountryPicker({ handleCountryChange }) {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        };\r\n        setTimeout(fetchAPI, 3000);\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker\r\n","export default __webpack_public_path__ + \"static/media/covid-19.cc692015.png\";","export default __webpack_public_path__ + \"static/media/title.9e5d4fc7.png\";","import React, { Component } from 'react'\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchData } from \"./api\";\nimport covid19 from './images/covid-19.png';\nimport covidtitle from './images/title.png';\n\nexport class App extends Component {\n\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData()\n    this.setState({ data })\n    console.log(this.state)\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({ data, country });\n    console.log(this.state)\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={covidtitle} alt=\"covid19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <p>Last Updated on {new Date(data.lastUpdate).toUTCString()}</p>\n        <p>Information provided by RapidApi's top Covid-19 data api:</p>\n        <a href=\"https://rapidapi.com/Gramzivi/api/covid-19-data\">\n          <div className={styles.credits} >\n            <img className={styles.logoimg} src={covid19} alt=\"covid19\" />\n            <span>COVID-19 data</span>\n          </div>\n        </a>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2GWmv\",\"image\":\"App_image__2fSTW\",\"credits\":\"App_credits__2J9ZV\",\"logoimg\":\"App_logoimg__3UjgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__4hb3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__wLCCp\"};"],"sourceRoot":""}